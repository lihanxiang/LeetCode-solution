// s 的值不能改变，否则会导致结果中有节点重复
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<>();
        String s = "";
        if (root != null){
            DFS(root, "", list);
        }
        return list;
    }

    public void DFS(TreeNode treeNode, String s, List<String> list){
		// 在叶节点时添加元素至列表
        if (treeNode.left == null && treeNode.right == null){
            list.add(s + treeNode.val);
        }
        if (treeNode.left != null){
            DFS(treeNode.left, s + treeNode.val + "->", list);
        }
        if (treeNode.right != null){
            DFS(treeNode.right, s + treeNode.val + "->", list);
        }
    }
}