//先获取第一个数，然后对剩下的元素做双指针计算
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> lists = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 2; i++){
            if (i == 0 || (i > 0 && nums[i] != nums[i - 1])){
                int lo = i + 1, hi = nums.length - 1, sum = 0 - nums[i];
                while (lo < hi){
                if (nums[lo] + nums[hi] == sum){
                    lists.add(Arrays.asList(nums[i], nums[lo], nums[hi]));
                    while (lo < hi && nums[lo] == nums[lo + 1]){
                        lo++;
                    }
                    while (lo < hi && nums[hi] == nums[hi - 1]){
                        hi--;
                    }
                    lo++;
                    hi--;
                    
                } else if (nums[lo] + nums[hi] < sum){
                    lo++;
                } else {
                    hi--;
                }
            }
            }
        }
        return lists;
    }
}