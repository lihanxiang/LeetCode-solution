class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if (matrix.length == 0 || matrix[0].length == 0){
            return false;
        }
        int rows = matrix.length;
        int cols = matrix[0].length;
        int lo = 0, hi = rows - 1;
        while (lo <= hi){
            int mid = lo + (hi - lo) / 2;
            if (matrix[mid][cols - 1] >= target && matrix[mid][0] <= target){
                return find(matrix[mid], target);
            } 
            else if (matrix[mid][cols - 1] > target){
                hi = mid - 1;
            } else {
                lo = mid + 1;
            }
        }
        return false;
    }
    
    public boolean find (int[] col, int target){
        int lo = 0, hi = col.length - 1;
        while (lo <= hi){
            int mid = lo + (hi - lo) / 2;
            if (col[mid] == target){
                return true;
            }
            if (col[mid] > target){
                hi = mid - 1;
            } else {
                lo = mid + 1;
            }
        }
        return false;
    }
}
