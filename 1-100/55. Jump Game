// max 为能走的最大步数，如果当前能走的步数没有 max 多，就保留 max
// max >= i 是为了确保不让 i 在循环中超出能走的步数
class Solution {
    public boolean canJump(int[] nums) {
        int max = nums[0];
        for (int i = 0; i < nums.length && i <= max; i++){
            if (nums[i] + i > max){
                max = nums[i] + i;
            }
        }
        return max >= nums.length - 1;
    }
}

// max < i 就说明 后面有几步是到不了的
class Solution {
    public boolean canJump(int[] nums) {
        int max = nums[0];
        for (int i = 0; i < nums.length; i++){
            if (max < i){
                return false;
            }
            max = Math.max(max, nums[i] + i);
        }
        return true;
    }
}