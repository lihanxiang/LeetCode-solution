// DFS + 回溯
class Solution {
    private List<List<Integer>> lists = new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        if (root == null){
            return lists;
        }
        List<Integer> list = new ArrayList<>();
        helper(list, root, sum);
        return lists;
    }
    
    public void helper(List<Integer> list, TreeNode root, int sum){
        if (root == null){
            return;
        }
        list.add(root.val);
        if (root.val == sum && root.left == null && root.right == null){
            lists.add(new ArrayList<>(list));
        } else {
            helper(list, root.left, sum - root.val);
            helper(list, root.right, sum - root.val);
        }
        list.remove(list.size() - 1);
    }
}