//pre 存储节点，导致复杂度太高，实际上只要存储值就行
class Solution {
    int result = Integer.MAX_VALUE;
    TreeNode pre = null;
    public int minDiffInBST(TreeNode root) {
        if (root == null){
            return 0;
        }
        if (root.left != null){
            minDiffInBST(root.left);
        }
        if (pre != null){
            result = Math.min(result, root.val - pre.val);
        }
        pre = root;
        if (root.right != null){
            minDiffInBST(root.right);
        }
        return result;
    }
}

//存储值的方式，效率比较高
class Solution {
    int result = Integer.MAX_VALUE;
    Integer pre = null;
    public int minDiffInBST(TreeNode root) {
        helper(root);
        return result;
    }
    
    public void helper(TreeNode root){
        if (root == null){
            return;
        }
        helper(root.left);
        if (pre != null){
            result = Math.min(result, root.val - pre);
        }
        pre = root.val;
        helper(root.right);
    }
}